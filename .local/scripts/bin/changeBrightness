#!/usr/bin/env bash

# Script inspired by:
# https://github.com/dastorm/volume-notification-dunst/blob/master/volume.sh
# https://gist.github.com/sebastiencs/5d7227f388d93374cebdf72e783fbd6a

step="$1"

function get_brightness {
    light -G
}

function send_notification {
    # icon="preferences-system-brightness-lock"
    brightness=$(get_brightness)
    # Make the bar with the special character ─ (it's not dash -)
    # https://en.wikipedia.org/wiki/Box-drawing_character
    # bar=$(seq -s "─" 0 "$(echo "$brightness / 5" | bc -l)" | sed 's/[0-9]//g')
    # Send the notification
    # dunstify  -r 5555 -u low "      $bar"

    dunstify -r 5555 -u low \
    -h int:value:"$brightness" "Brightness: ${brightness}%"
}

function Usage()
{
    echo "Usage: changeBrightness [INT]"
    echo "Example: changeBrightness -5"
}

if [[ "$#" -ne 1 || $1 == "-h" ]]; then
    Usage
    exit
fi

# https://stackoverflow.com/questions/806906/how-do-i-test-if-a-variable-is-a-number-in-bash
# is the parameter an integer?
re="^[+-]?[0-9]+([.][0-9]+)?$"
# =~ is used when using a regexp expression
if ! [[ $1 =~ $re ]] ; then
    echo "error: Not a number" >&2
    Usage
    exit
fi

if [[ $1 -ge 0 ]]; then
    # increase the backlight by 5%
    light -A "$step"
    send_notification
else
    # decrease the backlight by 5%
    light -U "$(echo "$step * -1" | bc -l)" # take absolute value of negative number
    send_notification
fi
